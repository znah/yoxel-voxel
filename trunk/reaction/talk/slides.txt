== Воксельное октарное дерево (SVO) ==

==== Полигональное представление 3D-объектов ====
<[columns]
[[[6.0cm]]]
* Хорошо отработанный метод
* Высокопроизводительная GPU-растеризация
* !Сложно "просверлить дырку"! _gray_(тесселяция, изменение топологии)_
* !Сложно строить уровни детализации!


[[[6.0cm]]]
<<<coral_poly.png, width=5.5cm>>>

[columns]>

==== Воксельное представление (3D массив) ====

<[columns]
[[[6.0cm]]]
* Используется в медицинской и научной графике
* Методы рендеринга, пригодные для интерактивной визуализации
* Легко редактировать _gray_(как растровое изображение, только 3D)_
* !Очень требовательно к памяти!

[[[6.0cm]]]
<<<tree_volume.png, width=5.5cm>>>

[columns]>

==== Воксельное октарное дерево (Sparse Voxel Octree)====
<[columns]
[[[6.0cm]]]
* Хранит только воксели, близкие к границам объектов в _blue_октарном дереве_ _gray_(варианты: spatial hash, ...)_
* Обратная трассировка лучей
* По-прежнему легко редактировать

[[[6.0cm]]]
<<<svo_division.png, width=6cm>>>\
!TODO: картинка Crassin'а, нарисовать свою!

[columns]>

==  CUDA SVO Raycasting demo ==

==== CUDA SVO Demo: видео ====
<[center]
<<<demo_shot.png, height=7.5cm>>>
[center]>

==== CUDA SVO Demo: реализация ====
* 32 бита на воксель (16 - цвет, 16 - упакованная номаль)
* Редактрование SVO на CPU _gray_(сложение/вычитание объемов)_
* Визуализация на GPU при помощи CUDA _blue_(800x600, 25-30fps, NVIDIA GeForce 275)_
* SVO упакованно в 1D-текстуру
* Безстековая трассировка луча
* Уровни детализации
* Сокрытие воксельных артектов _gray_(dither + multisampling)_

==== Борьба с артефактами вокселизации (1/3) ====
<[center]
<<<closeup_1.png, height=7.5cm>>>
[center]>

==== Борьба с артефактами вокселизации (2/3) ====
<[center]
<<<closeup_2.png, height=7.5cm>>>
[center]>

==== Борьба с артефактами вокселизации (3/3) ====
<[center]
<<<closeup_3.png, height=7.5cm>>>
[center]>

== Построение SVO на GPU ==

==== Дальнейшая работа ====
* Реализация более гибких структур данных
* Построение и обновление воксельной сцены на GPU
* Приложения
  
==== GPU вокселизация ====
<[columns]
[[[6.0cm]]]
* Использует GPU растеризатор
* Очень эффективна
* \url{http://artis.imag.fr/Publications/2008/ED08a/}
[[[6.0cm]]]
<<<voxel_rabbit.png, width=5.5cm>>>
[columns]>

==== Модель роста кораллов ====
<[columns]
[[[6.0cm]]]
* Использует в работе вокселизацию
* \url{http://homepages.cwi.nl/~merks/Publications/Corals.html}

<[center]
_gray_Видео_
[center]>
[[[6.0cm]]]
<<<coral.png, width=5.5cm>>>
[columns]>

