//

uniform sampler2D flowTex;
uniform sampler2D pstateTex;

uniform float dt;
uniform float time;

float4 pstateUpdateFP(float2 tc : TEXCOORD0) : COLOR
{
  float4 data = tex2D(pstateTex, tc);
  float2 p = data.xy;
  float2 v = tex2D(flowTex, p).xy;
  p += v * dt;
  p = frac(p + float2(1, 1));
  return float4(p, data.z, data.w);
}


uniform float vortexScale;

void vortexVP( 
  float4 data  : ATTR0,
  out float4 oPos  : POSITION,
  out float oPSize : PSIZE,
  out float oCurl  : TEXCOORD1 ) 
{ 
  float4 p = float4(data.xy, 0, 1);
  oPos = mul(glstate.matrix.mvp, p);
  oPSize = vortexScale * data.z;
  oCurl = data.w;
}


float4 vortexFP( float2 tc: TEXCOORD0, float curl : TEXCOORD1 ) : COLOR 
{ 
  tc.y = 1.0 - tc.y;
  float2 p = tc * 2.0 - 1.0;
  float2 t = float2(-p.y, p.x);
  
  float r = 6*length(p);
  float v = exp(-r) * curl;
  t *= v;

  return float4(t, r*v, 0); 
}

